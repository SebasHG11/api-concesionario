// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using apiconcesionario;

#nullable disable

namespace apiconcesionario.Migrations
{
    [DbContext(typeof(ApiContext))]
    partial class ApiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("apiconcesionario.Models.Auto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.ToTable("Auto", (string)null);
                });

            modelBuilder.Entity("apiconcesionario.Models.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Marca", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "https://upload.wikimedia.org/wikipedia/commons/1/1e/Chevrolet-logo.png",
                            Nombre = "Chevrolet"
                        },
                        new
                        {
                            Id = 2,
                            Image = "https://static.vecteezy.com/system/resources/previews/020/502/740/original/mazda-logo-symbol-brand-car-with-name-black-design-japan-automobile-illustration-free-vector.jpg",
                            Nombre = "Mazda"
                        },
                        new
                        {
                            Id = 3,
                            Image = "https://upload.wikimedia.org/wikipedia/commons/thumb/6/60/Bugatti_logo.svg/2560px-Bugatti_logo.svg.png",
                            Nombre = "Bugatti"
                        },
                        new
                        {
                            Id = 4,
                            Image = "https://w7.pngwing.com/pngs/492/427/png-transparent-audi-logo-audi-r8-car-logo-audi-text-trademark-desktop-wallpaper.png",
                            Nombre = "Audi"
                        });
                });

            modelBuilder.Entity("apiconcesionario.Models.Auto", b =>
                {
                    b.HasOne("apiconcesionario.Models.Marca", "Marca")
                        .WithMany("Autos")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("apiconcesionario.Models.Marca", b =>
                {
                    b.Navigation("Autos");
                });
#pragma warning restore 612, 618
        }
    }
}
